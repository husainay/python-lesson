name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ main ]

jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: husain-python-lesson
      REGION: asia-southeast2
      REPO_NAME: github-action

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1. Authenticate with Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      # 2. Install gcloud CLI
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}

      # 3. Verify gcloud
      - name: Verify gcloud
        run: gcloud info

      # 4. Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

      # 5. Setup QEMU (so runner can emulate arm64)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      # 6. Setup buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      # 7. Build (ARM64) and push using buildx
      - name: Build and push ARM64 image (Buildx)
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          IMAGE_URI_BASE=$REGION-docker.pkg.dev/${{ vars.PROJECT_ID }}/$REPO_NAME/$IMAGE_NAME

          echo "Building for linux/arm64 and pushing to $IMAGE_URI_BASE (tags: latest, $COMMIT_SHA)"

          # make sure builder exists & is bootstrapped
          docker buildx create --use --name gcbuilder || true
          docker buildx inspect --bootstrap

          # Build and push for arm64 (emulated if runner is x86_64)
          docker buildx build \
            --platform linux/arm64 \
            -t $IMAGE_URI_BASE:latest \
            -t $IMAGE_URI_BASE:$COMMIT_SHA \
            --push \
            .
